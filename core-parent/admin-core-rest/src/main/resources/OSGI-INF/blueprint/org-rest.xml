<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <reference id="orgService" interface="com.kalix.admin.core.api.biz.IOrganizationBeanService"/>

    <camelContext id="orgCamel" xmlns="http://camel.apache.org/schema/blueprint">

        <restConfiguration component="servlet" bindingMode="json">
            <dataFormatProperty key="prettyPrint" value="${rest.pretty}"/>
        </restConfiguration>

        <!-- defines the rest services using the context-path /org -->
        <rest path="/orgs" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>org rest service</description>

            <!-- this is a rest GET to find all orgs -->
            <get id="route-getAllOrg">
                <description>Find all orgs</description>
                <to uri="bean:orgService?method=getAllOrg(${header.isAll})"/>
            </get>
            <!-- this is a rest PUT to create an org -->
            <post id="route-addOrg" type="com.kalix.admin.core.entities.OrganizationBean"
                  outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Create a org</description>
                <to uri="bean:orgService?method=saveEntity"/>
            </post>

            <!-- this is a rest PUT to update an org -->
            <put id="route-updateOrg" type="com.kalix.admin.core.entities.OrganizationBean"
                 outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Updates a org</description>
                <to uri="bean:orgService?method=updateEntity"/>
            </put>
            <!--&lt;!&ndash; this is a rest GET to view an org by the given name &ndash;&gt;-->
            <!--<get id="route-getOrgByName" uri="/name">-->
            <!--<description>Find org by id</description>-->
            <!--<to uri="bean:orgService?method=getOrgByName(${header.name})"/>-->
            <!--</get>-->
        </rest>
        <rest path="/orgs/{id}" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <!-- this is a rest GET to view an org by the given id -->
            <get id="route-getOrg">
                <description>Find org by id</description>
                <to uri="bean:orgService?method=getOrganizationDTO(${header.id})"/>
            </get>
            <!-- this is a rest DELETE to delete an org -->
            <delete id="route-deleteOrg" outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Delete a org</description>
                <to uri="bean:orgService?method=deleteEntity(${header.id})"/>
            </delete>
        </rest>
        <!--rest url for the user-org-relation-->
        <rest path="/orgs/{id}/users" consumes="application/json;charset=utf-8"
              produces="application/json;charset=utf-8">
            <!--get the ids that has been selected into org-->
            <get id="route-getUserByOrganizationId" outType="java.util.List">
                <description>Find users by department Id</description>
                <to uri="bean:orgService?method=getOrganizationUsers(${header.id})"/>
            </get>
            <post id="route-saveOrganizationUsers" type="java.util.List"
                  outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>save departmentUsers</description>
                <to uri="bean:orgService?method=saveOrganizationUsers"/>
            </post>
        </rest>

        <!-- 根据组织结构id查找机构下所有用户 -->
        <rest path="/orgs/{orgId}/users/list" consumes="application/json;charset=utf-8" produces="application/json">
            <get id="route-findUserByOrgId" outType="com.kalix.framework.core.api.persistence.JsonData">
                <to uri="bean:userService?method=findUserByOrgId(${header.orgId},${header.page},${header.limit},${header.sort})"/>
            </get>

            <post id="route-addOrgUsers" type="com.kalix.admin.core.entities.UserBean"
                  outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Create a User</description>
                <to uri="bean:userService?method=saveEntityWithOrg(${body}, ${header.orgId})"/>
            </post>


        </rest>

        <rest path="/orgs/{orgId}/users/list/{id}" consumes="application/json;charset=utf-8" produces="application/json">
            <put id="route-updateOrgUser" type="com.kalix.admin.core.entities.UserBean"
                 outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Updates a User</description>
                <to uri="bean:userService?method=updateEntity"/>
            </put>
        </rest>

        <rest path="/orgs/{id}/users/ids" consumes="application/json;charset=utf-8"
              produces="application/json;charset=utf-8">
            <!--get the ids that has been selected into org-->
            <get id="route-getUserIdsByOrganizationId" outType="java.util.List">
                <description>Find users by department Id</description>
                <to uri="bean:orgService?method=getUserIdsByOrganizationId(${header.id})"/>
            </get>
        </rest>

        <!-- 根据当前机构id查找其父id路径 -->
        <rest path="/orgs/{id}/parentpath" consumes="application/json;charset=utf-8"
              produces="application/json;charset=utf-8">
            <get id="route-getParentOrgIdPath" outType="java.lang.String">
                <description>Find Parent department Id Path</description>
                <to uri="bean:orgService?method=getParentOrgIdPath(${header.id})"/>
            </get>
        </rest>
    </camelContext>
</blueprint>